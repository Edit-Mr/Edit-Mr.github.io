---
import Nav from "@components/Nav.astro";
import * as i18n from "@i18n";
import "@assets/intro/base.css";
import Footer from "@components/Footer.astro";
import Head from "@components/Head.astro";
import ogImage from "@assets/img/thumbnail.webp";

const lang = i18n.local(Astro.url.pathname);
const t = i18n.t(lang, {
    title: {
        en: "Make Friends - Elvis Mao",
        "zh-Hant": "交個朋友 - 毛哥EM",
        "zh-Hans": "交个朋友 - 毛哥EM"
    },
    description: {
        en: "Subscribe to hmmm - A monthly newsletter where I share my updates, observations, thoughts, and creations.",
        "zh-Hant": "訂閱 hmmm - 每月與你分享我的近況、觀察、想法和創作的電子報。",
        "zh-Hans": "订阅 hmmm - 每月与你分享我的近况、观察、想法和创作的电子报。"
    },
    pageTitle: {
        en: "Make Friends",
        "zh-Hant": "交個朋友",
        "zh-Hans": "交个朋友"
    },
    subtitle: {
        en: "The Hmmm Monthly Newsletter",
        "zh-Hant": "The Hmmm Monthly Newsletter",
        "zh-Hans": "The Hmmm Monthly Newsletter"
    },
    lead: {
        en: "Welcome! Leave your email here and let's stay connected.",
        "zh-Hant": "歡迎在這裡留下你的 email，讓我們保持聯繫。",
        "zh-Hans": "欢迎在这里留下你的 email，让我们保持联系。"
    },
    intro: {
        en: "If you'd like, I'll send you a monthly email called \"hmmm\" where I share my updates, observations, thoughts, and creations. I'll also share my recent articles and some free goods.",
        "zh-Hant": "如果你願意的話我會每個月發一封叫做「hmmm」 的 email 和你分享我的近況、觀察、想法和創作。同時也會分享我近期寫的文章，和一些免費的好東西。",
        "zh-Hans": "如果你愿意的话我会每个月发一封叫做「hmmm」的 email 和你分享我的近况、观察、想法和创作。同时也会分享我近期写的文章，和一些免費的好東西。"
    },
    nameLabel: {
        en: "Name",
        "zh-Hant": "如何稱呼",
        "zh-Hans": "如何称呼"
    },
    namePlaceholder: {
        en: "Your name",
        "zh-Hant": "你的名字",
        "zh-Hans": "你的名字"
    },
    emailLabel: {
        en: "Email Address",
        "zh-Hant": "電子郵件",
        "zh-Hans": "电子邮件"
    },
    emailPlaceholder: {
        en: "your.email@example.com",
        "zh-Hant": "your.email@example.com",
        "zh-Hans": "your.email@example.com"
    },
    interestLabel: {
        en: "Interest",
        "zh-Hant": "興趣",
        "zh-Hans": "兴趣"
    },
    interestPlaceholder: {
        en: "Full Stack, Web, Design, Debate, etc.",
        "zh-Hant": "全端, 網頁, 設計, 辯論, etc.",
        "zh-Hans": "全端, 网页, 设计, 辩论, etc."
    },
    sourceLabel: {
        en: "Where did you find me?",
        "zh-Hant": "你從哪裡找到我？",
        "zh-Hans": "你从哪里找到我？"
    },
    referrerLabel: {
        en: "Referrer URL",
        "zh-Hant": "推薦網址",
        "zh-Hans": "推荐网址"
    },
    subscribeBtn: {
        en: "Subscribe to Newsletter",
        "zh-Hant": "訂閱電子報",
        "zh-Hans": "订阅电子报"
    },
    sendingBtn: {
        en: "Sending...",
        "zh-Hant": "傳送中...",
        "zh-Hans": "传送中..."
    },
    successMsg: {
        en: "✓ Success! Nice to meet you!",
        "zh-Hant": "✓ 送出成功！很高興認識你！",
        "zh-Hans": "✓ 送出成功！很高兴认识你！"
    },
    errorMsg: {
        en: "✗ An error occurred. Please try again.",
        "zh-Hant": "✗ 發生錯誤，請重試。",
        "zh-Hans": "✗ 发生错误，请重试。"
    },
    footerNote: {
        en: "You can unsubscribe at any time if you don't want to receive hmmm anymore.",
        "zh-Hant": "如果你不想收到 hmmm，可以隨時取消訂閱。",
        "zh-Hans": "如果你不想收到 hmmm，可以随时取消订阅。"
    }
});
---

<html lang={lang}>
    <head>
        <Head i18n={t.t} title={t.title} description={t.description} theme="#333" image={ogImage.src} />
    </head>

    <body>
        <Nav />
        <main class="newspaper">
            <div class="masthead">
                <div class="date">_</div>
                <h1 class="title"><div>{t.pageTitle}</div></h1>
                <div class="subtitle">{t.subtitle}</div>
            </div>

            <div class="divider"></div>

            <article class="content">
                <p class="lead">{t.lead}</p>
                <p>{t.intro}</p>
            </article>

            <div class="divider"></div>

            <form class="subscription-form" id="subscriptionForm">
                <!-- <h2 class="form-title">Subscription Form</h2> -->
                <div class="form-group">
                    <label for="name">{t.nameLabel}</label>
                    <input type="text" id="name" name="entry.1211740646" required placeholder={t.namePlaceholder} />
                </div>

                <div class="form-group">
                    <label for="email">{t.emailLabel}</label>
                    <input type="email" id="email" name="entry.1272945868" required placeholder={t.emailPlaceholder} />
                </div>

                <div class="form-group">
                    <label for="interest">{t.interestLabel}</label>
                    <input type="text" id="interest" name="entry.1531547295" placeholder={t.interestPlaceholder} />
                </div>

                <div class="form-group hide">
                    <label for="source">{t.sourceLabel}</label>
                    <input type="text" id="source" name="entry.488472312" value="elvismao.com" readonly />
                </div>

                <div class="form-group hide">
                    <label for="referrer">{t.referrerLabel}</label>
                    <input type="text" id="referrer" name="entry.1137316312" readonly />
                </div>

                <button type="submit" class="submit-btn" id="submitBtn">{t.subscribeBtn}</button>

                <div class="form-status" id="formStatus"></div>
            </form>

            <div class="footer-note">
                <p>{t.footerNote}</p>
            </div>
        </main>
        <Footer />
        <script src="@assets/intro/style.js"></script>
        <script define:vars={{ sendingBtn: t.sendingBtn, subscribeBtn: t.subscribeBtn, successMsg: t.successMsg, errorMsg: t.errorMsg }}>
            // Set the date
            const dateElem = document.querySelector(".date");
            if (dateElem) {
                const options = { year: "numeric", month: "long", day: "numeric" };
                const now = new Date();
                dateElem.textContent = now.toLocaleDateString("en", options);
            }

            // Set the referrer URL to current full URL (or ?f= parameter if provided)
            const urlParams = new URLSearchParams(window.location.search);
            const referrerParam = urlParams.get("f");
            const referrerInput = document.getElementById("referrer");
            if (referrerInput) {
                referrerInput.value = referrerParam || window.location.href;
            }

            // Handle form submission
            const form = document.getElementById("subscriptionForm");
            const submitBtn = document.getElementById("submitBtn");
            const formStatus = document.getElementById("formStatus");

            form?.addEventListener("submit", async e => {
                e.preventDefault();

                // Disable form during submission
                submitBtn.disabled = true;
                submitBtn.textContent = sendingBtn;
                formStatus.textContent = "";
                formStatus.className = "form-status";

                // Get form data
                const formData = new FormData(form);
                const url = "https://docs.google.com/forms/d/e/1FAIpQLSeITLO_J8DsxypUmCL8Ubd4n_2WpiFI5hCnmtUY-TrKYys2Iw/formResponse";

                try {
                    // Submit to Google Forms
                    await fetch(url, {
                        method: "POST",
                        body: formData,
                        mode: "no-cors" // Google Forms requires no-cors
                    });

                    // Show success message
                    formStatus.textContent = successMsg;
                    formStatus.className = "form-status success";

                    // Reset form
                    form.reset();

                    // Restore referrer
                    if (referrerInput) {
                        referrerInput.value = referrerParam || window.location.href;
                    }

                    // Re-enable button
                    submitBtn.disabled = false;
                    submitBtn.textContent = subscribeBtn;
                } catch (error) {
                    // Show error message
                    formStatus.textContent = errorMsg;
                    formStatus.className = "form-status error";

                    // Re-enable button
                    submitBtn.disabled = false;
                    submitBtn.textContent = subscribeBtn;
                }
            });
        </script>
    </body><style>
        @import url("https://font.emtech.cc/css/GenKiMinTC");

        :root {
            --newspaper-bg: #f8f5f0;
            --newspaper-text: #1a1a1a;
            --newspaper-border: #000;
            --newspaper-gray: #666;
        }

        body {
            color: var(--newspaper-text);
            line-height: 1.6;
            padding-block: 6rem 2rem;
        }

        .newspaper {
            font-family: "GenKiMinTC", "Georgia", "Times New Roman", serif;
            margin-inline: auto;
            max-width: 800px;
            padding: 3rem 2rem;
            background: #fff;
            box-shadow: 0 0 30px rgba(0, 0, 0, 0.1);
        }

        .masthead {
            text-align: center;
            margin-bottom: 2rem;
        }

        .date {
            font-size: 0.85rem;
            text-transform: uppercase;
            letter-spacing: 1px;
            color: var(--newspaper-gray);
            margin-bottom: 1rem;
        }

        .title {
            font-size: 4rem;
            font-weight: 900;
            letter-spacing: 2px;
            margin: 0.5rem 0;
            text-transform: uppercase;
            border-top: 4px double var(--newspaper-border);
            border-bottom: 4px double var(--newspaper-border);
            padding: 1rem 0;
        }

        h1 div {
            position: relative;
            transform: translateY(-17%);
        }

        .subtitle {
            font-size: 1rem;
            font-style: italic;
            color: var(--newspaper-gray);
            margin-top: 0.5rem;
        }

        .divider {
            height: 2px;
            background: var(--newspaper-border);
            margin: 2rem 0;
        }

        .content {
            column-count: 1;
            column-gap: 2rem;
            text-align: justify;
            margin-bottom: 2rem;
        }

        .lead {
            font-size: 1.2rem;
            font-weight: bold;
            margin-bottom: 1rem;
        }

        .content p {
            margin-bottom: 1rem;
        }

        .subscription-form {
            border: 2px solid var(--newspaper-border);
            padding: 2rem;
            margin: 2rem 0;
            background: #fafafa;
        }

        .form-title {
            font-size: 2rem;
            font-weight: 900;
            text-transform: uppercase;
            letter-spacing: 1px;
            margin-bottom: 1.5rem;
            text-align: center;
            border-bottom: 2px solid var(--newspaper-border);
            padding-bottom: 0.5rem;
        }

        .form-group {
            margin-bottom: 1.5rem;
        }

        .form-group label {
            display: block;
            font-weight: bold;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            margin-bottom: 0.5rem;
            color: var(--newspaper-text);
        }

        .form-group input {
            width: 100%;
            padding: 0.75rem;
            font-size: 1rem;
            border: 1px solid var(--newspaper-border);
            background: #fff;
            box-sizing: border-box;
            transition: border-color 0.3s;
        }

        .form-group input:focus {
            outline: none;
            border-color: var(--newspaper-gray);
            box-shadow: 0 0 0 2px rgba(0, 0, 0, 0.1);
        }

        .form-group input[readonly] {
            background: #f0f0f0;
            color: var(--newspaper-gray);
        }

        .submit-btn {
            width: 100%;
            padding: 1rem;
            font-size: 1rem;
            font-weight: bold;
            text-transform: uppercase;
            letter-spacing: 1px;
            background: var(--newspaper-text);
            color: #fff;
            border: 2px solid var(--newspaper-border);
            cursor: pointer;
            transition: all 0.3s;
        }

        .submit-btn:hover:not(:disabled) {
            background: #fff;
            color: var(--newspaper-text);
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .submit-btn:disabled {
            opacity: 0.6;
            cursor: not-allowed;
        }

        .form-status {
            margin-top: 1.5rem;
            padding: 1rem 1rem 1.5rem 1rem;
            text-align: center;
            font-size: 1rem;
            font-weight: bold;
            border-radius: 2px;
            display: none;
            line-height: 1;
        }

        .form-status.success {
            display: block;
            background: #d4edda;
            color: #155724;
            border: 2px solid #28a745;
        }

        .form-status.error {
            display: block;
            background: #f8d7da;
            color: #721c24;
            border: 2px solid #dc3545;
        }

        .footer-note {
            margin-top: 2rem;
            padding-top: 1rem;
            border-top: 1px solid var(--newspaper-gray);
            text-align: center;
            font-size: 0.85rem;
            color: var(--newspaper-gray);
            font-style: italic;
        }

        .hide {
            display: none;
        }

        :global(.social-links, footer div) {
            text-align: center;
        }

        :global(footer) {
            padding: 1rem;
        }

        @media (max-width: 768px) {
            .newspaper {
                padding: 2rem 1rem;
                margin: 1rem;
            }

            .title {
                font-size: 2.5rem;
            }

            .content {
                column-count: 1;
                text-align: left;
            }
        }
    </style>
</html>
