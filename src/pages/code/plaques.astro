---
import Head from "@components/Head.astro";
---

<html lang="en">
    <head>
        <meta charset="UTF-8" />
         <Head path="code/plaques" title="Plaques Guesser" description="Plaques Guesser" theme="#111" />
        <style is:global>
            * {
                box-sizing: border-box;
                margin: 0;
                padding: 0;
            }
            body {
                height: 100%;
                background: #111;
                color: white;
                font-family:
                    system-ui,
                    -apple-system,
                    BlinkMacSystemFont,
                    "Segoe UI",
                    Roboto,
                    Oxygen,
                    Ubuntu,
                    Cantarell,
                    "Open Sans",
                    "Helvetica Neue",
                    sans-serif;
            }
            main {
                display: flex;
                justify-content: center;
                align-items: center;
                min-height: 100vh;
                gap: 3rem;
            }

            section {
                margin-top: 20px;
                text-align: center;
                font-size: 18px;
                max-width: 600px;
                width: min(400px, 100%);
            }

            #box {
                width: 60vmin;
                aspect-ratio: 1;
                background: #222;
                border: 2px solid white;
                position: relative;
                cursor: cell;
            }

            main:has(#long:checked) #box {
                aspect-ratio: 8 / 5;
            }

            #box.hint {
                background: linear-gradient(#5a5a5a 1%, transparent 1%), linear-gradient(90deg, #5a5a5a 1%, #222 1%);
                background-size: 10% 10%;
            }

            .dot {
                position: absolute;
                transform: translateY(100%);
                padding: 0.5rem;
                --color: #4fc3f7;
                color: var(--color);
            }

            .dot::before {
                content: "";
                display: block;
                position: absolute;
                width: 12px;
                height: 12px;
                border-radius: 50%;
                top: 0;
                left: 0;
                transform: translate(-50%, -50%);
            }

            .dot::before {
                background-color: var(--color);
            }
            .target {
                --color: #f44336;
            }
            #info{
                margin-bottom: .5rem;
            }

            h2 {
                margin-block: 1rem;
            }
            p {
                margin-bottom: 0.5rem;
            }

            a {
                color: rgb(22, 137, 213);
            }

            @media screen and (max-aspect-ratio: 1/1) {
                #box {
                    height: unset;
                    width: min(60vh, calc(100vw - 2rem));
                }

                main {
                    flex-direction: column;
                }
            }
        </style>
    </head>
    <body>
        <main>
            <div id="box"></div>
            <section>
                <h1>Plaques Guesser</h1>
                <div>
                    <h2 id="target">Tap to begin!</h2>
                    <div id="info">
                        <p>For Geoguessr. Many poles in Taiwan feature these blue plaques with strings of letters and numbers that act as precise coordinates.</p>
                        <p>‚Äú3264‚Äù means that within the rectangle, we are 32% eastward and 64% northward.</p>
                        <p>(Press space for hint)</p>
                        <p>By <a href="https://elvismao.com">Elvis Mao</a></p>
                    </div>
                    <p><input type="checkbox" id="long" /> 8:5 Rectangle</p>
                </div>
            </section>
        </main>

        <script>
            const box = document.getElementById("box");
            const info = document.getElementById("info");
            const goal = document.getElementById("target");
            const recent = [];
            let target = null;

            const drawDot = (x, y, className) => {
                const dot = document.createElement("div");
                dot.className = "dot " + className;
                dot.style.left = `${x}%`;
                dot.style.bottom = `${y}%`;
                dot.innerText = `${Math.round(x).toString().padStart(2, "0")}${Math.round(y).toString().padStart(2, "0")}`;
                box.appendChild(dot);
            };

            box.addEventListener("click", e => {
                const oldTarget = target;
                const newX = Math.floor(Math.random() * 100);
                const newY = Math.floor(Math.random() * 100);
                target = { x: newX, y: newY };
                goal.innerText = newX.toString().padStart(2, "0") + newY.toString().padStart(2, "0");
                if (!oldTarget) {
                    info.innerHTML = "Find this spot.";
                    return;
                }

                const rect = box.getBoundingClientRect();
                const sizeW = rect.width;
                const sizeH = rect.height;
                const x = ((e.clientX - rect.left) / sizeW) * 100;
                const y = ((sizeH - (e.clientY - rect.top)) / sizeH) * 100; // y is northward (up)
                const dx = x - oldTarget.x;
                const dy = y - oldTarget.y;
                const dist = Math.sqrt(dx * dx + dy * dy);
                recent.push(dist);
                if (recent.length > 5) recent.shift();
                const avg = recent.reduce((a, b) => a + b, 0) / recent.length;
                box.querySelectorAll(".dot").forEach(dot => dot.remove());
                drawDot(oldTarget.x, oldTarget.y, "target");
                drawDot(x, y, "user");
                info.innerHTML = `
                          üéØ Target: (${oldTarget.x.toFixed(1)}, ${oldTarget.y.toFixed(1)})<br>
                          üëÜ You clicked: (${x.toFixed(1)}, ${y.toFixed(1)})<br>
                          üìè Distance: ${dist.toFixed(2)}<br>
                          üßÆ Average (last 5): ${avg.toFixed(2)}
                        `;
            });

            document.addEventListener("keydown", e => {
                if (e.code === "Space") {
                    e.preventDefault();
                    box.classList.add("hint");
                }
            });

            document.addEventListener("keyup", e => {
                if (e.code === "Space") box.classList.remove("hint");
            });
        </script>
    </body>
</html>
