---
import Head from "@components/Head.astro";
---

<html lang="en">
    <head>
        <Head path="code/3color" title="Golden Ratio Palette Generator" description="Golden Ratio Palette Generator" />
        <style is:global>
            @import url("https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");

            * {
                box-sizing: border-box;
                margin: 0;
                padding: 0;
            }
            .body {
                --primary: #ffa500;
                --accent: #03fff0;
                --support: #996300;
                background-color: var(--primary);
                padding-right: 10vw;
                font-size: 1.14563rem;
                font-family: "Inter", sans-serif;
                font-optical-sizing: auto;
            }
            a {
                color: var(--accent);
            }

            main {
                background-color: #fff;
                padding: min(5vw, 3.5rem);
                box-shadow: 0 0 3rem rgba(0, 0, 0, 0.1);
                height: 100vh;
                height: 100svh;
                display: flex;
            }

            section {
                display: flex;
                flex-direction: column;
                justify-content: space-between;
                padding-top: 1.5rem;
                height: 100%;
            }

            .palette-container {
                margin-top: 4rem;
            }
            .palette {
                display: flex;
                align-items: center;
                gap: 2rem;
                cursor: pointer;
                transition: color 0.2s ease-in-out;
            }
            .card {
                width: 10rem;
                height: 5.5rem;
                transition: box-shadow 0.2s ease-in-out;
            }

            .palette:hover .card {
                box-shadow: 0 0 1rem rgba(0, 0, 0, 0.3);
            }
            .primary:hover {
                color: var(--primary);
            }

            .accent:hover {
                color: var(--accent);
            }

            .support:hover {
                color: var(--support);
            }

            .primary .card {
                background-color: var(--primary);
                border-radius: 1rem 1rem 0 0;
            }

            .accent .card {
                background-color: var(--accent);
            }

            .support .card {
                background-color: var(--support);
                border-radius: 0 0 1rem 1rem;
            }

            .title {
                font-weight: bold;
                margin-bottom: 0.5rem;
            }

            input {
                border: none;
                outline: transparent;
            }

            h1 {
                font-size: 3rem;
                margin-bottom: 0.31rem;
            }
            h2 {
                font-size: 1.854rem;
                margin-bottom: 1.5rem;
            }

            #hexInput {
                border-bottom: #000 1px solid;
                width: 4.5em;
                font-size: 1.14563rem;
                text-transform: uppercase;
            }

            .picker {
                display: flex;
                align-items: center;
                gap: 1rem;
            }

            .copied {
                position: fixed;
                bottom: 2rem;
                left: 50%;
                transform: translateX(-50%);
                background-color: rgba(0, 0, 0, 0.551);
                color: #fff;
                padding: 0.5rem 1rem;
                border-radius: 0.5rem;
                font-size: 1rem;
                opacity: 0;
                transition: opacity 0.3s ease-in-out;
            }
        </style>
    </head>
    <body class="body">
        <main>
            <section>
                <div>
                    <h1>Golden Ratio</h1>
                    <h2>Palette Generator</h2>
                    <div class="picker">
                        <input type="text" id="hexInput" value="#ffa500" maxlength="7" />
                        <input type="color" id="colorInput" value="#ffa500" />
                    </div>
                    <div class="palette-container">
                        <div class="palette primary">
                            <div class="card"></div>
                            <div class="text">
                                <div class="title">Primary</div>
                                <div class="hex">#FFA500</div>
                            </div>
                        </div>
                        <div class="palette accent">
                            <div class="card"></div>
                            <div class="text">
                                <div class="title">Accent</div>
                                <div class="hex">#03FFF0</div>
                            </div>
                        </div>
                        <div class="palette support">
                            <div class="card"></div>
                            <div class="text">
                                <div class="title">Support</div>
                                <div class="hex">#996300</div>
                            </div>
                        </div>
                    </div>
                </div>
                <footer>
                    +137.5Â° Hue, 60% Brightness
                    <br />By <a href="https://elvismao.com">Elvis Mao</a>
                </footer>
            </section>
        </main>
        <div class="copied">Copied to clipboard!</div>

        <script>
            const colorInput = document.getElementById("colorInput");
            const hexInput = document.getElementById("hexInput");
            const hexs = document.querySelectorAll(".hex");

            const hexToHSL = H => {
                let r = 0,
                    g = 0,
                    b = 0;
                if (H.length == 4) {
                    r = "0x" + H[1] + H[1];
                    g = "0x" + H[2] + H[2];
                    b = "0x" + H[3] + H[3];
                } else if (H.length == 7) {
                    r = "0x" + H[1] + H[2];
                    g = "0x" + H[3] + H[4];
                    b = "0x" + H[5] + H[6];
                }
                r /= 255;
                g /= 255;
                b /= 255;
                let cmin = Math.min(r, g, b),
                    cmax = Math.max(r, g, b),
                    delta = cmax - cmin,
                    h = 0,
                    s = 0,
                    l = 0;

                if (delta == 0) h = 0;
                else if (cmax == r) h = ((g - b) / delta) % 6;
                else if (cmax == g) h = (b - r) / delta + 2;
                else h = (r - g) / delta + 4;

                h = Math.round(h * 60);
                if (h < 0) h += 360;

                l = (cmax + cmin) / 2;
                s = delta == 0 ? 0 : delta / (1 - Math.abs(2 * l - 1));
                s = +(s * 100).toFixed(1);
                l = +(l * 100).toFixed(1);

                return { h, s, l };
            };

            const hslToHex = ({ h, s, l }) => {
                s /= 100;
                l /= 100;

                const c = (1 - Math.abs(2 * l - 1)) * s;
                const x = c * (1 - Math.abs(((h / 60) % 2) - 1));
                const m = l - c / 2;

                let r = 0,
                    g = 0,
                    b = 0;
                if (h < 60) {
                    r = c;
                    g = x;
                    b = 0;
                } else if (h < 120) {
                    r = x;
                    g = c;
                    b = 0;
                } else if (h < 180) {
                    r = 0;
                    g = c;
                    b = x;
                } else if (h < 240) {
                    r = 0;
                    g = x;
                    b = c;
                } else if (h < 300) {
                    r = x;
                    g = 0;
                    b = c;
                } else {
                    r = c;
                    g = 0;
                    b = x;
                }

                const toHex = v => {
                    const hex = Math.round((v + m) * 255).toString(16);
                    return hex.length === 1 ? "0" + hex : hex;
                };

                return `#${toHex(r)}${toHex(g)}${toHex(b)}`;
            };

            const updateColors = hex => {
                hex = hex.startsWith("#") ? hex : "#" + hex;
                const hsl = hexToHSL(hex);
                const rotated = { ...hsl, h: (hsl.h + 137.5) % 360 };
                const lightened = { ...hsl, l: Math.min(hsl.l * 0.6, 100) };

                hexs[0].innerText = hex;
                hexs[1].innerText = hslToHex(rotated);
                hexs[2].innerText = hslToHex(lightened);
                // set css var
                document.body.style.setProperty("--primary", hex);
                document.body.style.setProperty("--accent", hslToHex(rotated));
                document.body.style.setProperty("--support", hslToHex(lightened));
            };

            colorInput.addEventListener("input", e => {
                hexInput.value = e.target.value;
                updateColors(e.target.value);
            });

            hexInput.addEventListener("input", e => {
                colorInput.value = e.target.value;
                updateColors(e.target.value);
            });

            // Initialize on load
            updateColors(colorInput.value);

            // copy to clipboard
            const copiedMessage = document.querySelector(".copied");
            const copyToClipboard = text => {
                navigator.clipboard.writeText(text).then(() => {
                    copiedMessage.innerText = `Copied ${text}`;
                    copiedMessage.style.opacity = "1";
                    setTimeout(() => {
                        copiedMessage.style.opacity = "0";
                    }, 2000);
                });
            };

            // when palette is clicked, copy hex value
            document.querySelectorAll(".palette").forEach(palette => {
                palette.addEventListener("click", () => {
                    const hex = palette.querySelector(".hex").innerText;
                    copyToClipboard(hex);
                });
            });
        </script>
    </body>
</html>
